name: CI

on:
  push:
    branches:
      - main
    tags: ["*"]
  pull_request:

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ github.event_name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1.6"
          - "1.8"
          - "1.9"
          - "nightly"
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
      - uses: actions/cache@v3
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - run: julia --color=yes --project -e'import Pkg; Pkg.test(test_args=["--live"])'
        env:
          JULIAHUB_SERVER: ${{ secrets.JULIAHUB_SERVER }}
          JULIAHUB_TOKEN: ${{ secrets.JULIAHUB_TOKEN }}

  aqua:
    name: Aqua
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: "1"
      - run: |
          import Pkg
          Pkg.activate(temp=true)
          Pkg.add(name="Aqua", version="0.6")
          Pkg.develop(path=".")
          import Aqua, JuliaHub
          Aqua.test_all(JuliaHub)
        shell: julia --color=yes {0}
        name: "Aqua.test_all(JuliaHub)"
        continue-on-error: true

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: "1"
      - uses: julia-actions/julia-buildpkg@v1
      - name: Set up documentation environment
        run: |
          using Pkg
          # TODO: remove docs manifest once Documenter 1.0 is released
          #Pkg.add([
          #  PackageSpec(name="Documenter", rev="master"),
          #  PackageSpec(url="https://github.com/JuliaDocs/DocumenterMermaid.jl.git")
          #])
          #Pkg.develop(path=".")
          Pkg.instantiate()
        shell: julia --color=yes --project=docs/ {0}
      - name: Build & deploy the documentation
        run: julia --color=yes --project=docs/ docs/make.jl
        env:
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}

  doctest:
    name: Doctest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: "1.9"
      - uses: julia-actions/julia-buildpkg@v1
      - name: Set up documentation environment
        run: |
          using Pkg
          #Pkg.add([
          #  PackageSpec(name="Documenter", rev="master"),
          #  PackageSpec(url="https://github.com/JuliaDocs/DocumenterMermaid.jl.git")
          #])
          #Pkg.develop(path=".")
          Pkg.instantiate()
        shell: julia --color=yes --project=docs/ {0}
      - name: Check doctests
        run: julia --color=yes --project=docs/ docs/make.jl --doctest
